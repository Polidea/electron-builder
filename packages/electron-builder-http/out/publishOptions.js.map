{
  "version": 3,
  "file": "publishOptions.js",
  "sourceRoot": "",
  "sources": [
    "../src/publishOptions.ts"
  ],
  "names": [],
  "mappings": ";;;;;;;mBAwD0B,AAAsB;AAC9C,AAAM,AAAC,cAAG,AAAO,QAAC,AAAQ,YAAI,AAAO,aAAM,AAAO,QAAC,AAAI,QAAI,AAAY,YAAE,AAC3E;AAAC,AAqDD,AAAM;eAAgB,AAAkB;AACtC,QAAI,AAAG,AAAG,iBAAW,AAAO,QAAC,AAAM,MAAmB;AACtD,AAAE,AAAC,QAAC,AAAO,QAAC,AAAI,QAAI,AAAI,AAAC,MAAC,AAAC;AACzB,AAAG,AAAI,mBAAI,AAAO,QAAC,AAAI,IAAE,AAC3B;AAAC;AACD,AAAM,WAAC,AAAG,AACZ;AAAC",
  "sourcesContent": [
    "export type PublishProvider = \"github\" | \"bintray\" | \"s3\" | \"generic\"\n\n// typescript-json-schema generates only PublishConfiguration if it is specified in the list, so, it is not added here\nexport type AllPublishOptions = string | GithubOptions | S3Options | GenericServerOptions | BintrayOptions\n// https://github.com/YousefED/typescript-json-schema/issues/80\nexport type Publish = AllPublishOptions | Array<AllPublishOptions> | null\n\n/**\n * Can be specified in the [config](https://github.com/electron-userland/electron-builder/wiki/Options#configuration-options) or any platform- or target- specific options.\n * \n * If `GH_TOKEN` is set — defaults to `[{provider: \"github\"}]`.\n * \n * If `BT_TOKEN` is set and `GH_TOKEN` is not set — defaults to `[{provider: \"bintray\"}]`.\n */\nexport interface PublishConfiguration {\n  /**\n   * The provider.\n   */\n  readonly provider: PublishProvider\n\n  /**\n   * The owner.\n   */\n  readonly owner?: string | null\n\n  readonly token?: string | null\n}\n\n/**\n * GitHub options.\n */\nexport interface GithubOptions extends PublishConfiguration {\n  /**\n   * The repository name. [Detected automatically](https://github.com/electron-userland/electron-builder/wiki/Publishing-Artifacts#github-repository).\n   */\n  readonly repo?: string | null\n\n  /**\n   * Whether to use `v`-prefixed tag name.\n   * @default true\n   */\n  readonly vPrefixedTagName?: boolean\n\n  /**\n   * The host (including the port if need).\n   * @default github.com\n   */\n  readonly host?: string | null\n\n  /**\n   * The protocol. GitHub Publisher supports only `https`.\n   * @default https\n   */\n  readonly protocol?: \"https\" | \"http\" | null\n}\n\nexport function githubUrl(options: GithubOptions) {\n  return `${options.protocol || \"https\"}://${options.host || \"github.com\"}`\n}\n\n/**\n * Generic (any HTTP(S) server) options.\n */\nexport interface GenericServerOptions extends PublishConfiguration {\n  /**\n   * The base url. e.g. `https://bucket_name.s3.amazonaws.com`. You can use `${os}` (expanded to `mac`, `linux` or `win` according to target platform) and `${arch}` macros.\n   */\n  readonly url: string\n\n  /**\n   * The channel.\n   * @default latest\n   */\n  readonly channel?: string | null\n}\n\n/**\n * Amazon S3 options. `https` must be used, so, if you use direct Amazon S3 endpoints, format `https://s3.amazonaws.com/bucket_name` [must be used](http://stackoverflow.com/a/11203685/1910191). And do not forget to make files/directories public.\n * @see [Getting your credentials](http://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/getting-your-credentials.html).\n */\nexport interface S3Options extends PublishConfiguration {\n  /**\n   * The bucket name.\n   */\n  readonly bucket: string\n\n  /**\n   * The directory path.\n   * @default /\n   */\n  readonly path?: string | null\n\n  /**\n   * The channel.\n   * @default latest\n   */\n  readonly channel?: string | null\n\n  /**\n   * The ACL.\n   * @default public-read\n   */\n  readonly acl?: \"private\" | \"public-read\" | null\n\n  /**\n   * The type of storage to use for the object.\n   * @default STANDARD\n   */\n  readonly storageClass?: \"STANDARD\" | \"REDUCED_REDUNDANCY\" | \"STANDARD_IA\" | null\n}\n\nexport function s3Url(options: S3Options) {\n  let url = `https://${options.bucket}.s3.amazonaws.com`\n  if (options.path != null) {\n    url += `/${options.path}`\n  }\n  return url\n}\n\n/**\n * Bintray options.\n */\nexport interface BintrayOptions extends PublishConfiguration {\n  /**\n   * The Bintray package name.\n   */\n  readonly package?: string | null\n\n  /**\n   * The Bintray repository name.\n   * @default generic\n   */\n  readonly repo?: string | null\n\n  /**\n   * The Bintray user account. Used in cases where the owner is an organization.\n   */\n  readonly user?: string | null\n}\n\nexport interface VersionInfo {\n  readonly version: string\n}\n\nexport interface UpdateInfo extends VersionInfo {\n  readonly path: string\n  readonly githubArtifactName?: string | null\n  readonly sha2: string\n\n  readonly releaseName?: string | null\n  readonly releaseNotes?: string | null\n  readonly releaseDate: string\n}"
  ]
}
